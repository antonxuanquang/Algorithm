package introduction;

import java.util.ArrayList;

public class QuickSort extends Sort {
	
	public static <T extends Comparable<T>> void sort(ArrayList<T> array) {
		quickSort(array, 0, array.size() - 1);
	}
	
	private static <T extends Comparable<T>> void quickSort(
			ArrayList<T> array, int left, int right) {
		if (left < right) {
			int pivot = partition(array, left, right);
			quickSort(array, left, pivot - 1);
			quickSort(array, pivot + 1, right);
		}
	}
	
	private static <T extends Comparable<T>> int partition(
			ArrayList<T> array, int left, int right) {
		int leftRunner = left + 1;
		int rightRunner = right;
		T pivot = array.get(left);
		

		
		
		
		while (leftRunner < rightRunner) {
			while (array.get(leftRunner++).compareTo(pivot) < 0 && leftRunner <= right);
			while (array.get(rightRunner--).compareTo(pivot) >= 0 && rightRunner >= left);
			if (leftRunner < rightRunner) swap(array, leftRunner, rightRunner);
		}
		swap(array, leftRunner, left);
		System.out.println("left: " + left);
		System.out.println("right: " + right);
		System.out.println(array);
		return leftRunner;
	}
}
