
public class Four {
	public static void main(String[] args) {
		System.out.println(isPalindromable("Tacaat Coa"));
	}
	
/*
 * 
 *  This is my answer
 * 
 */
	
	private static boolean isPalindromable(String inputString) {
		
		int [] char_count = new int[128];
		boolean one_char_flag = false;
		
		inputString = inputString.toLowerCase();
		
		for (int i = 0; i < inputString.length(); i++) {
			int val = inputString.charAt(i);
			char_count[val]++;
		}
		
		char_count[' '] = 0;
		
		for (int i = 0; i < char_count.length; i++) {
			if (char_count[i] % 2 != 0) {
				if (one_char_flag) return false;
				else one_char_flag = true;
			}
		}
		return true;
	}
	
/*
 * 
 *  This is the book answer 
 * 
 */
	boolean isPermutationOfPalindrome(String phrase) {
		int [] table = buildCharFrequencyTable(phrase);
		return checkMaxOneOdd(table);
	}

private boolean checkMaxOneOdd(int[] table) {
		// TODO Auto-generated method stub
		return false;
	}

private int[] buildCharFrequencyTable(String phrase) {
	int [] table = new int[Character.getNumericValue('z')
	                       - Character.getNumericValue('a') + 1];
	for (char c: phrase.toCharArray()) {
		
	}
	return null;
}
	
}











