import java.util.LinkedList;


public class Six {
	/*
	 * 
	 * Create a data structure to maintain a FIFO system and implement operations
	 * such as enqueue, dequeueAny, dequeueDog, and dequeueCat. You may use the 
	 * built-in LinkedList data structure 
	 * 
	 */
	private static class Animal {
		private int order;
		protected String name;
		public Animal (String name) {this.name = name;}
		
		public int getOrder() {
			return order;
		}
		
		public void setOrder(int order) {
			this.order = order;
		}
		
		public boolean isOlderThan(Animal other) {
			return this.order < other.order;
		}
	}
	
	private static class Cat extends Animal{
		private Animal animal;
		public Cat(int order) {
			animal = new Animal("Cat");
			animal.order = order;
		}
	}
	
	private static class Dog {
		private Animal animal;
		public Dog(int order) {
			animal = new Animal("Dog");
			animal.order = order;
		}
	}
	
	private static class AnimalQueue {
		LinkedList<Dog> dogs = new LinkedList<Dog>();
		LinkedList<Cat> cats = new LinkedList<Cat>();
		int order = 0;
		
		
		public void enqueue(Animal animal) {
			animal.setOrder(order);
			order++;
			
			if (animal instanceof Cat) cats.addLast((Cat) animal);
		}
	}
}
