import java.util.Stack;


public class Two {
	
	/*
	 * 
	 * Robot in Grid: Imagine a robot sitting on the upper left corner of grid
	 * with r rows and c columns. The robot can only move in two directions,
	 * right and down, but certain cells are "off limits" such that the robot
	 * cannot step on them. Design an algorithm to find a path for the robot
	 * from the top left to the bottom right.
	 * 
	 */
	
	private static class Coordinator {
		public int row;
		public int column;
		
		public Coordinator(int row, int column) {
			this.row = row;
			this.column = column;
		}
	}
	
	public static Stack<Coordinator> path(Coordinator[] offGrids, int row, int column) {
		return path(offGrids, new Coordinator(0, 0), row, column);
	}

	private static Stack<Coordinator> path(Coordinator[] offGrids,
			Coordinator startPoint, int row, int column) {
		Stack<Coordinator> stack = new Stack<Coordinator>();
		if 
		return null;
	}
	
	

}
