import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Stack;
import java.util.function.Function;
import java.util.function.ToDoubleFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToLongFunction;


public class Thirdteen {
	
	/*
	 * 
	 * Stack of Boxes: You have a stack of n boxes, with width w[i], height h[i],
	 * and depth d[i]. The boxes cannot be rotated and can only be stacked on top
	 * of one another if each box in the stack is strictly larger than the box 
	 * above it in width, height, and depth. Implement a method to compute the 
	 * height of the tallest possible stack. The height of a stack is the sum of
	 * the heights of each box.
	 * 
	 */
	
	public static int createStack(ArrayList<Box> boxes) {
		Collections.sort(boxes, new BoxComparator());
		int maxHeight = 0;
		for (int i = 0; i < boxes.size(); i++) {
			int height = createStack(boxes, i);
			maxHeight = Math.max(maxHeight, height);
		}
		return maxHeight;
	}
	
	public static int createStack(ArrayList<Box> boxes, int bottomIndex) {
		Box bottom = boxes.get(bottomIndex);
		int maxHeight = 0;
		for (int i = bottomIndex + 1; i < boxes.size(); i++) {
			if (boxes.get(i).canBeAbove(bottom)) {
				int height = createStack(boxes, i);
				maxHeight = Math.max(height, maxHeight);
			}
		}		
		maxHeight += bottom.height;
		return maxHeight;
	}
		
	
	public static void main(String[] args) {
		Box[] boxList = { new Box(6, 4, 4), new Box(8, 6, 2), new Box(5, 3, 3), new Box(7, 8, 3), new Box(4, 2, 2), new Box(9, 7, 3)};
		ArrayList<Box> boxes = new ArrayList<Box>();
		for (Box b : boxList) {
			boxes.add(b);
		}
		
		int height = createStack(boxes);
		System.out.println(height);
	}
	
	private static class Box implements Comparator<Box>{
		int w,h,d;
		public Box(int width, int height, int depth) {
			w = width;
			h = height;
			d = depth;
		}
		
		public boolean isLarger(Box that) {
			return w >= that.w && h >= that.h && d >= that.d;
		}

		public int compare(Box arg0, Box arg1) {
			// TODO Auto-generated method stub
			return 0;
		}
	}
	
	public static int stackBoxes(ArrayList<Box> stack) {
		
		
		return 0;
	}
	
	public static void main (String[]args) {
		Box[] boxList = { new Box(6, 4, 4), new Box(8, 6, 2), new Box(5, 3, 3), new Box(7, 8, 3), new Box(4, 2, 2), new Box(9, 7, 3)};
		ArrayList<Box> boxes = new ArrayList<Box>();
		for (Box b : boxList) {
			boxes.add(b);
		}
		
		int height = stackBoxes(boxes);
		System.out.println(height);
	}

}
