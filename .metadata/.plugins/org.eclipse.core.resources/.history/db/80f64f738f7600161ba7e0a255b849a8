import java.util.ArrayList;


public class Seven {
	
	/*
	 * 
	 * Permutations without Dups: Write a method to compute all permutation
	 * of a string of unique characters
	 * 
	 */
	
	public static ArrayList<String> permutation(String string) {
		ArrayList<String> result = new ArrayList<String>();
		permutation(string, result);
		return result;
	}

	private static void permutation(String string, ArrayList<String> result) {
		if (string.length() == 0) return;
		else if (string.length() == 1) result.add(string);
		else {
			ArrayList<String> newResult = new ArrayList<String>();
			for (int i = 0; i < string.length(); i++) {
				char firstChar = string.charAt(i);
				String subString = string.substring(0, i) + 
			}
			
		}
	}
	
	public static void main(String args[]){
	      String Str = new String("Welcome to Tutorialspoint.com");

	      System.out.print("Return Value :" );
	      System.out.println(Str.substring(10) );

	      System.out.print("Return Value :" );
	      System.out.println(Str.substring(10, 15) );
	   }

}
